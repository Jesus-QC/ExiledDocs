"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[697],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return m}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function u(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=n.createContext({}),s=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},c=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,c=u(e,["components","mdxType","originalType","parentName"]),d=s(r),m=o,f=d["".concat(l,".").concat(m)]||d[m]||p[m]||i;return r?n.createElement(f,a(a({ref:t},c),{},{components:r})):n.createElement(f,a({ref:t},c))}));function m(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u.mdxType="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=r[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},1246:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return p}});var n=r(7462),o=r(3366),i=(r(7294),r(3905)),a=["components"],u={sidebar_position:1},l="Contributing to EXILED",s={unversionedId:"Resources/Intro",id:"Resources/Intro",title:"Contributing to EXILED",description:"This is a simple tutorial guiding you to contribute to our framework.",source:"@site/docs/Resources/Intro.md",sourceDirName:"Resources",slug:"/Resources/Intro",permalink:"/ExiledDocs/docs/Resources/Intro",draft:!1,editUrl:"https://github.com/Exiled-Team/EXILED/tree/master/docs/docs/Resources/Intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Events",permalink:"/ExiledDocs/docs/Plugins/Events"}},c={},p=[{value:"Forking EXILED",id:"forking-exiled",level:3},{value:"Setting <code>EXILED_REFERENCES</code>",id:"setting-exiled_references",level:3},{value:"Windows users",id:"windows-users",level:4},{value:"Linux users",id:"linux-users",level:4},{value:"Contributing docs",id:"contributing-docs",level:2}],d={toc:p};function m(e){var t=e.components,r=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"contributing-to-exiled"},"Contributing to EXILED"),(0,i.kt)("p",null,"This is a simple tutorial guiding you to contribute to our framework."),(0,i.kt)("h3",{id:"forking-exiled"},"Forking EXILED"),(0,i.kt)("p",null,"First, create a fork of our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Exiled-Team/EXILED"},"GitHub repository"),"."),(0,i.kt)("p",null,"Then, clone it to your computer like so: ",(0,i.kt)("inlineCode",{parentName:"p"},"git clone https://github.com/your-username/EXILED.git")),(0,i.kt)("p",null,"Open a terminal in your forked EXILED folder and run ",(0,i.kt)("inlineCode",{parentName:"p"},"git checkout dev"),". This will switch you to the dev branch, which all pull requests should be submitted to."),(0,i.kt)("h3",{id:"setting-exiled_references"},"Setting ",(0,i.kt)("inlineCode",{parentName:"h3"},"EXILED_REFERENCES")),(0,i.kt)("p",null,"If you haven't already, install the ",(0,i.kt)("inlineCode",{parentName:"p"},"SCP: Secret Laboratory Dedicated Server")," through Steam or extract ",(0,i.kt)("a",{parentName:"p",href:"https://exiled.host/build_deps/References.zip"},"this zip file")," to an easily accessible folder."),(0,i.kt)("h4",{id:"windows-users"},"Windows users"),(0,i.kt)("p",null,"Open the Environment Variables menu by searching for ",(0,i.kt)("inlineCode",{parentName:"p"},"Environment Variables")," in the Start Menu."),(0,i.kt)("p",null,"Create a new environment variable titled ",(0,i.kt)("inlineCode",{parentName:"p"},"EXILED_REFERENCES"),"."),(0,i.kt)("p",null,"The value should point to ",(0,i.kt)("inlineCode",{parentName:"p"},"your_steamapps_directory/common/SCP Secret Laboratory Dedicated Server/SCPSL_Data/Managed"),", or to the folder where you extracted the zip file mentioned earlier."),(0,i.kt)("h4",{id:"linux-users"},"Linux users"),(0,i.kt)("p",null,"Add ",(0,i.kt)("inlineCode",{parentName:"p"},'export EXILED_REFERENCES="PATH"')," to your ",(0,i.kt)("inlineCode",{parentName:"p"},"~/.bashrc")," or similar file."),(0,i.kt)("p",null,"PATH should point to ",(0,i.kt)("inlineCode",{parentName:"p"},"your_steamapps_directory/common/SCP Secret Laboratory Dedicated Server/SCPSL_Data/Managed"),", or to the folder where you extracted the zip file mentioned earlier."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"You should now be able to open the EXILED directory in your favorite IDE."),(0,i.kt)("p",null,"Once you are done, test your changes thoroughly, and then submit a pull request to the main EXILED repository. Make sure you are targeting the ",(0,i.kt)("inlineCode",{parentName:"p"},"dev")," branch, not ",(0,i.kt)("inlineCode",{parentName:"p"},"master"),"!"),(0,i.kt)("p",null,"Happy coding!"),(0,i.kt)("h2",{id:"contributing-docs"},"Contributing docs"),(0,i.kt)("p",null,"Documentation is built using ",(0,i.kt)("a",{parentName:"p",href:"https://docusaurus.io/docs"},"Docosaurus")))}m.isMDXComponent=!0}}]);